1索引组织表
  在InnoDB存储引擎中,表都是根据主键顺序组织存放的,这种存储方式的表称为索引组织表,在InnoDB存储引擎中,每张表都有主键.
  显式的说明哪个是主键
  非空的唯一索引(第一个先定义的唯一索引)
  ROWID(6字节,当上面两种都没有的情况下)

  可以通过select _rowid from table_name;来查看哪个是主键,但对于多列组成的主键看不了

2InnoDB逻辑存储结构
  从InnoDB存储引擎的逻辑存储结构看,所有数据都被逻辑地存放在一个空间中,称之为表空间(tablespace).
  表空间又由段、区、页(块)组成
  表空间可以看做是InnoDB存储引擎逻辑结构的最高层,所有的数据都是存放在表空间中.
  默认情况下InnoDB存储引擎将所有数据存放在共享表空间中,如果用户启用了innodb_file_per_table这个参数,则每张表内的数据可以单独放在一个表空间内.
  如果启用了这个参数,每张表的表空间存放的只是数据、索引和插入缓冲Bitmap页,如回滚(undo)信息,插入缓冲索引页、系统事务信息,二次写缓冲等还是存放在原来的共享表空间中
  所以即使启用了这个参数,共享表空间还是会不断增大的
  可以通过py_innodb_page_info.py来查看表空间的页的情况,https://github.com/happieme/py_innodb_page_info

3段
  表空间是由各个段组成的,常见的段有数据段、索引段、回滚段等
  InnoDB存储引擎表时索引组织的,因此数据即索引,索引即数据;那么数据段即为B+树的叶子节点,索引段即为B+树的非索引节点
  在InnoDB存储引擎中,对段的管理都是由引擎自身所完成的

4区
  区是连续页组成的空间,在任何情况下每个区的大小都为1MB,为了保证区中页的连续性,InnoDB一次从磁盘申请4-5个区
  在默认的情况下,InnoDB存储引擎页的大小为16K,即一个区中有64个连续的页
  启用innodb_file_per_table这个参数后,创建的表的默认大小是96K,为什么至少不是1MB,因为在每个段开始时,先用32个页大小的碎片页来存放数据,在使用完这些页后才是64个连续页的申请,
  这样做的目的是,对于一些小表,或者是undo这类的段,可以在开始时申请较少的空间,节省磁盘空间容量的开销

  已经用完了32个碎片页,新的页会采用区的方式进行空间的申请

5页(块)
  同大部分数据库一样,InnoDB有页的概念,页是InnoDB磁盘管理的最小单位,可以通过参数innodb_page_size将页的大小进行修改,若设置完成,不可以对其进行修改,除非通过mysqldump导入和导出操作来产生新的库
  在InnoDB存储引擎中,常见的页类型有：
  数据页、undo页、系统页、事务数据页、插入缓冲位图页、插入缓冲空闲列表页、未压缩的二进制大对象页、压缩的二进制大对象页

6行
  InnoDB存储引擎是面向列的,也就是说数据是按行进行存放的,每个页存放的行记录是有硬性定义的,最多允许存放16KB/2-200行的记录,即7992行

7InnoDB行记录格式
可以通过show table status like 'table_name';来查看该表的行记录格式