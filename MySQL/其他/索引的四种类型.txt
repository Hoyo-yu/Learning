1唯一索引/非唯一索引
2主键索引（主索引）
3聚集索引/非聚集索引
4组合索引

唯一索引是在表上一个或者多个字段组合建立的索引，这个或者这些字段的值组合起来在表中不可以重复。(允许null值的列作为唯一索引)
非唯一索引是在表上一个或者多个字段组合建立的索引，这个或者这些字段的值组合起来在表中可以重复，不要求唯一。

主键索引（主索引）是唯一索引的特定类型。表中创建主键时自动创建的索引 。一个表只能建立一个主索引。不允许为null

聚集索引（聚簇索引），表中记录的物理顺序与键值的索引顺序相同。一个表只能有一个聚集索引。
非聚集索引的记录的物理顺序和索引的顺序不一致。辅助索引的叶子节点存储的不是行记录的全部信息，但是会存储一个书签，这个书签会告诉引擎去哪里找到对应的数据行。实际上，这个书签存的就是其聚集索引的主键。

组合索引基于多个字段而创建的索引。
创建了 lname_fname_age 多列索引,相当于创建了(lname)单列索引，
(lname,fname)联合索引以及(lname,fname,age)联合索引。

拓展：聚集索引和非聚集索引的区别？分别在什么场景下使用？
区别1：聚集索引一个表中只能有一个，而非聚集索引一个表中可以存在多个。
区别2：表中记录的数据的物理顺序和键值的索引顺序是否相同。
区别3：聚集索引的叶节点就是数据节点，而非聚集索引的叶节点任然是索引节点，叶子层包含了一个指向表中的记录在数据页的指针的方式。
区别4：聚集索引查询快，非聚集索引修改快。因为聚集索引在修改记录时为了保持表中的记录的物理顺序和索引的顺序一致，要把记录插入到数据页的相应位置，必须在数据页中进行数据重排，降低了执行速率。也就是说时间花费在物理存储的排序上，首先要找到位置然后插入。

聚集索引的使用场景：某列包含了小数目的不同值，排序和范围查找。
非聚集索引的使用场景：此列包含了大数目的不同值，频繁更新的列。
