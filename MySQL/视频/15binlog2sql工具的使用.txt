**用途：误操作删除或insert错数据

工具推荐：基于binlog闪回
#数据删错了
binlog2sql,MyFlash
https://github.com/danfengcao/binlog2sql
https://github.com/Meituan-Dianping/MyFlash

yum -y install epel-release
yum -y install python-pip  //  easy-install pip

利用binlog2sql 找回删除的数据(DML语句才适用,像DDL drop truncate等操作不能利用该工具回滚)
先找到删除操作在哪个binlog文件中
cd binlog2sql
./binlog2sql/binlog2sql.py -h 172.16.1.3 -u root -p luling1012 --start-file=mysql-bin.00000x(解析binlog) --start-pos=xxx --stop-pos=xxx
命令行窗口会有#start xxxx   end  xxxx time  (相同的是同一个事物)

./binlog2sql/binlog2sql.py --flashback -h 172.16.1.3 -u root -p luling1012 --start-file=mysql-bin.00000x(变成了insert操作) --start-pos=xxx --stop-pos=xxx | mysql -S /tmp/mysql.sock -p 被删除的库
先删除的后执行

mysql连接配置

-h host; -P port; -u user; -p password

解析模式

--stop-never 持续解析binlog。可选。默认False，同步至执行命令时最新的binlog位置。
-K, --no-primary-key 对INSERT语句去除主键。可选。默认False
-B, --flashback 生成回滚SQL，可解析大文件，不受内存限制。可选。默认False。与stop-never或no-primary-key不能同时添加。
--back-interval -B模式下，每打印一千行回滚SQL，加一句SLEEP多少秒，如不想加SLEEP，请设为0。可选。默认1.0。

解析范围控制

--start-file 起始解析文件，只需文件名，无需全路径 。必须。
--start-position/--start-pos 起始解析位置。可选。默认为start-file的起始位置。
--stop-file/--end-file 终止解析文件。可选。默认为start-file同一个文件。若解析模式为stop-never，此选项失效。
--stop-position/--end-pos 终止解析位置。可选。默认为stop-file的最末位置；若解析模式为stop-never，此选项失效。
--start-datetime 起始解析时间，格式'%Y-%m-%d %H:%M:%S'。可选。默认不过滤。
--stop-datetime 终止解析时间，格式'%Y-%m-%d %H:%M:%S'。可选。默认不过滤。

对象过滤

-d, --databases 只解析目标db的sql，多个库用空格隔开，如-d db1 db2。可选。默认为空。
-t, --tables 只解析目标table的sql，多张表用空格隔开，如-t tbl1 tbl2。可选。默认为空。
--only-dml 只解析dml，忽略ddl。可选。默认False。
--sql-type 只解析指定类型，支持INSERT, UPDATE, DELETE。多个类型用空格隔开，如--sql-type INSERT DELETE。可选。默认为增删改都解析。用了此参数但没填任何类型，则三者都不解析。

注意事项：
mysql server必须开启，离线模式下不能解析
参数 binlog_row_image 必须为FULL，暂不支持MINIMAL
解析速度不如mysqlbinlog