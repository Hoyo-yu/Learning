优点：
程序级别的proxy
危险SQL过滤
Proxy高级技术支持
支持Query cache
支持动态配置加载
支持Query路由
故障切换

安装：
https://github.com/sysown/proxysql/releases/download/v2.0.15/proxysql-2.0.15-1-centos7.x86_64.rpm

proxysql需要监听的端口
6032管理端口
6033对外服务端口
默认管理用户名及密码：admin,admin

影响因素：cpu和网卡

启动关闭
service proxysql start | service proxysql stop
常规配置文件/etc/proxysql.cnf

连接 mysql -uadmin -padmin -h 127.0.0.1 -P6032

管理配置：
mysql users
mysql servers
mysql query rules
mysql variables
admin variables

runtime(运行中的配置) <-->memory(加载到内存中的配置) <-->disk(磁盘永久化的配置)
config file->memory

load mysql users to runtime;
save mysql users to disk;通过SQL更改的配置,可以调用命令去持久化到磁盘
load mysql users from config;

主要需要配置的内容：user,host,hostgroup

disk和config file是持久化的配置文件
disk  -> sqLite3默认位置 ：$datadir/proxysql.db
在内存中动态更改的配置,如果重启,没进行持久化(save)则会丢失
config file是一个传统配置,不建议更改

三者之间的关系：proxysql启动时,首先去找/etc/proxysql.cnf 找到它的dir,如果datadir下有proxysql.db就加载Proxysql.db中的配置
如果启动proxysql时带有--inital标志,会用/etc/proxysql.cnf的配置,runtime和disk中的配置全部失效
在调用--reload会把/etc/proxysql.cnf和disk中的配置进行合并,如果冲突的话,disk优先


Master：172.16.1.3 Slave:172.16.1.4 read_only=1,super_read_only=1打开
ProxySQL:
172.16.1.3:6032 管理连接                        mysql -uadmin -padmin -h 127.0.0.1 -P6032    
172.16.1.3:6033 登录的是相应的库  可以执行相关操作mysql -h 127.0.0.1 -P6033 -uroot -pluling1012
#将在其他的主机上做ProxySQL

w_hg=10
ro_hg=11
在主库上创建一个监控用的账号  grant replication client on *.* to monitor@'%' identified by 'monitor';


在proxysql中的mian库
insert into mysql_replication_hostgroups(writer_hostgroup,reader_hostgroup)values(10,11);
insert into mysql_servers(hostgroup_id,hostname,port,max_connections,max_replication_lag)values(10,'172.16.1.3',3306,100,300),(11,'172.16.1.4',3306,100,300),
(11,'172.16.1.3',3306,100,300);#防止从库全部挂了,对外不能提供select操作
insert into mysql_users(username,password,default_hostgroup,default_schema)values('root','luling1012',10,'test'); 

select * from global_variables where variable_name like '%monitor%';
show tables from disk;

save mysql servers to disk;
load mysql servers to runtime;
save mysql users to disk;
load mysql users to runtime;

修改了密码需要
save mysql variables to disk;
load mysql variables to runtime;

一主一从使用proxysql做读写分离
M 172.16.1.3 3306 test root luling1012
S 172.16.1.4 3306 test root luling1012

访问从库并读写分离设置：https://github.com/sysown/proxysql/wiki/ProxySQL-Read-Write-Split-(HOWTO)  可以改写sql
INSERT INTO mysql_query_rules (rule_id,active,match_digest,destination_hostgroup,apply)VALUES(1,1,'^SELECT.*FOR UPDATE$',10,1),(2,1,'^SELECT',11,1);
LOAD MYSQL QUERY RULES TO RUNTIME;
SAVE MYSQL QUERY RULES TO DISK;

做完读写分离后,proxysql切换到了从库select @@server_id;select @@hostname;       select @@hostname for update;


show tables from stats;

+--------------------------------------+
| global_variables                     |全局的变量**
| stats_memory_metrics                 |
| stats_mysql_commands_counters        |当前操作命令的统计
| stats_mysql_connection_pool          |**
| stats_mysql_connection_pool_reset    |
| stats_mysql_errors                   |
| stats_mysql_errors_reset             |
| stats_mysql_free_connections         |
| stats_mysql_global                   |当前的status状态值**
| stats_mysql_gtid_executed            |
| stats_mysql_prepared_statements_info |
| stats_mysql_processlist              |后端show processlists输出
| stats_mysql_query_digest             |**
| stats_mysql_query_digest_reset       |重新清空query_digest这张表
| stats_mysql_query_rules              |起作用的rules
| stats_mysql_users                    |
| stats_proxysql_servers_checksums     |
| stats_proxysql_servers_metrics       |
| stats_proxysql_servers_status        |
+--------------------------------------+

查看proxysql操作的命令
select digest_text from stats.stats_mysql_query_digest;

查看proxysql执行的次数
select sum(count_star) from stats_mysql_query_digest;

访问一下stats_mysql_query_digest_reset,也就是select * from stats_mysql_query_digest_reset limit 1;
stats_mysql_query_digest这张表会被清空

select * from stats.stats_mysql_connection_pool;
select * from stats.stats_mysql_processlist;


show tables form monitor;
select * from monitor.mysql_server_ping_log;响应慢检测
select * from monitor.mysql_server_read_only_log;检查read_only

某个时间段qps计算
select sum(Total_cnt) from stats_mysql_commands_counters;
sleep(5)
select sum(Total_cnt) from stats_mysql_commands_counters;
qps=两值相减/5

需要高峰期的sql列表
在高峰期之前select * from stats_mysql_query_digest_reset limit 1;清空
高峰期结束后select digest_text from stats.stats_mysql_query_digest;该表中的数据就是高峰期的sql列表